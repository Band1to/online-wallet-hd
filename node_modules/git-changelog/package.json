{
  "name": "git-changelog",
  "description": "A git changelog based on ANGULAR JS commit standards",
  "version": "0.1.8",
  "homepage": "https://github.com/rafinskipg/git-changelog",
  "author": {
    "name": "rafinskipg",
    "email": "rafinskipg@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/rafinskipg/git-changelog.git"
  },
  "bugs": {
    "url": "https://github.com/rafinskipg/git-changelog/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/rafinskipg/git-changelog/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "pre-test": "grunt",
    "post-test": "grunt",
    "test": "mocha -R spec test/**/*.spec.js",
    "preversion": "npm test",
    "coverage": "istanbul cover node_modules/.bin/_mocha -- -R dot"
  },
  "dependencies": {
    "commander": "^2.8.0",
    "debug": "^2.1.3",
    "lodash": "^3.7.0",
    "q": "^1.2.0"
  },
  "preferGlobal": "true",
  "bin": {
    "git-changelog": "tasks/command.js"
  },
  "devDependencies": {
    "chai": "^2.2.0",
    "chai-as-promised": "^5.0.0",
    "grunt": "^0.4.5",
    "grunt-contrib-clean": "^0.6.0",
    "grunt-contrib-jshint": "^0.11.2",
    "grunt-mocha-test": "^0.12.1",
    "istanbul": "^0.3.13",
    "mocha": "^2.2.4",
    "sinon": "^1.14.1",
    "sinon-chai": "^2.7.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin, git, git-changelog, angularjs, angular, commit, log"
  ],
  "readme": "![git-changelog logo][logo-image]\n---\n[![NPM Version][npm-badge]][npm-url]\n[![Build Status][travis-badge]][travis-url]\n[![Test Coverage][coverage-badge]][codeclimate-url]\n[![Code Climate][codeclimate-badge]][codeclimate-url]\n\n> A git changelog based on ANGULAR JS commit standards. [NPM page][npm-url]\n\n**Works as a `CLI` option or `grunt` plugin**\n\n[Example output](https://github.com/rafinskipg/git-changelog/blob/master/EXTENDEDCHANGELOG.md)\n\n## NEWS!\n\nversion 0.1.7 is out, special thanks to [JohnnyEstilles][JohnnyEstilles] for his work.\n\nThis release includes a big refactor with a huge improvement on test coverage.\n\n**Git changelog is secure enough**\n\nNext releases will include:\n- Downloadable resources area on the generated changelog, for linking to your zip project folder of certain tag.\n- .gitchangelogrc specification. That will allow using any comment standards for your commit messages.\n\n![Good news](http://www.labspaces.net/pictures/blog/4e5466b7dc69f1314154167_blog.jpg)\n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install git-changelog --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('git-changelog');\n```\n\n## The \"git_changelog\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `git_changelog` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  git_changelog: {\n    minimal: {\n      options: {\n        file: 'MyChangelog.md',\n        app_name : 'Git changelog',\n        logo : 'https://github.com/rafinskipg/git-changelog/raw/master/images/git-changelog-logo.png',\n        intro : 'Git changelog is a utility tool for generating changelogs. It is free and opensource. :)'\n      }\n    },\n    extended: {\n      options: {\n        repo_url: 'https://github.com/rafinskipg/git-changelog',\n        app_name : 'Git changelog extended',\n        file : 'EXTENDEDCHANGELOG.md',\n        grep_commits: '^fix|^feat|^docs|^refactor|^chore|BREAKING',\n        debug: true,\n        tag : false //False for commits since the beggining\n      }\n    },\n    fromCertainTag: {\n      options: {\n        repo_url: 'https://github.com/rafinskipg/git-changelog',\n        app_name : 'My project name',\n        file : 'tags/certainTag.md',\n        tag : 'v0.0.1'\n      }\n    }\n  }\n})\n```\n\n### Options | Defaults\n\n* **branch_name** : The name of the branch. Defaults to ` `\n* **repo_url** : The url of the project. For issues and commits links. Defaults to `git config --get remote.origin.url`\n* **version**: The version of the project. Defaults to ` `, *DEPRECATED* will default to the tag name\n* **file**: The name of the file that will be generated. Defaults to `CHANGELOG.md`,\n* **app_name** : The name of the project. Defaults to `My App - Changelog`\n* **intro** : The introduction text on the header of the changelog. Defaults to `null`\n* **logo** : A logo URL to be included in the header of the changelog. Defaults to `null`\n* **grep_commits**: The commits that will be picked. Defaults to `'^fix|^feat|^docs|^refactor|^chore|BREAKING'`\n* **tag**: You can select from which tag to generate the log, it defaults to the last one. Set it to false for log since the beginning of the project\n* **debug**: Debug mode, false by default\n\n### Command Line\nInstall it globally\n\n```\nnpm install -g git-changelog\n```\nSee commands\n```\ngit-changelog -h\n```\n\nUse it directly with the common options\n```\n Usage: git-changelog [options]\n\n  Options:\n\n    -h, --help                  output usage information\n    -V, --version               output the version number\n    -e, --extended              Extended log\n    -a, --app_name [app_name]   Name [app_name]\n    -b, --branch [branch_name]  Branch name [branch_name]\n    -f, --file [file]           File [file]\n    -r, --repo_url [url]        Repo url [url]\n    -l, --logo [logo]           Logo path [logo]\n    -i, --intro [intro]         intro text [intro]\n    -t, --tag [tag]             Since tag [tag]\n    -g, --grep [grep]           Grep commits for [grep]\n    -d, --debug                 Debugger\n\n\n```\n\nFor example:\n\n```\ngit-changelog -t false -a \"My nice application\"\n```\n\n## Git Commit Guidelines - Source : \"Angular JS\"\n\nWe have very precise rules over how our git commit messages can be formatted.  This leads to **more\nreadable messages** that are easy to follow when looking through the **project history**.  But also,\nwe use the git commit messages to **generate the AngularJS change log**.\n\n### Commit Message Format\nEach commit message consists of a **header**, a **body** and a **footer**.  The header has a special\nformat that includes a **type**, a **scope** and a **subject**:\n\n```\n<type>(<scope>): <subject>\n<BLANK LINE>\n<body>\n<BLANK LINE>\n<footer>\n```\n\nAny line of the commit message cannot be longer 100 characters! This allows the message to be easier\nto read on github as well as in various git tools.\n\nExample commit messages\n\n```\ngit commit -m \"docs(readme): added documentation for explaining the commit message\"\ngit commit -m \"refactor: Changed other things\"\n```\n\nClosing issues : \n\n```\ngit commit -m \"fix(git_changelog_generate): pass tag if it exists to gitReadLog\nPreviously if a tag was found the script would try to find commits\nbetween undefined..HEAD. By passing the tag, it now finds tags between\ntag..HEAD.\n\nCloses #5.\"\n```\n\n### Type\nMust be one of the following:\n\n* **feat**: A new feature\n* **fix**: A bug fix\n* **docs**: Documentation only changes\n* **style**: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)\n* **refactor**: A code change that neither fixes a bug or adds a feature\n* **test**: Adding missing tests\n* **chore**: Changes to the build process or auxiliary tools and libraries such as documentation generation\n\n\n### Scope\nThe scope could be anything specifying place of the commit change. For example `$location`,\n`$browser`, `$compile`, `$rootScope`, `ngHref`, `ngClick`, `ngView`, etc...\n\n### Subject\nThe subject contains succinct description of the change:\n\n* use the imperative, present tense: \"change\" not \"changed\" nor \"changes\"\n* don't capitalize first letter\n* no dot (.) at the end\n\n###Body\nJust as in the **subject**, use the imperative, present tense: \"change\" not \"changed\" nor \"changes\"\nThe body should include the motivation for the change and contrast this with previous behavior.\n\n###Footer\nThe footer should contain any information about **Breaking Changes** and is also the place to\nreference GitHub issues that this commit **Closes**.\n\n\nA detailed explanation can be found in this [document][commit-message-format].\n[commit-message-format]: https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#\n\n## Tagging your project\n\nIn order to have you project versions correctly displayed on your changelog, try to use this commit message format:\n\n```\nchore(release): v1.4.0 codename(jaracimrman-existence)\n```\n\nIn order to do that, you can use git annotated tags:\n\n```\ngit tag -a v1.4.0 -m 'chore(release): v1.4.0 codename(jaracimrman-existence)'\n```\n\nIf you are publishing NPM modules you can let NPM [do that for you][npm-versioning]:\n\n```\nnpm version patch -m \"chore(release): %s codename(furious-stallman)\"\n```\n\n## Contributing\nIn lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n_(Nothing yet)_\n\n[logo-image]: images/git-changelog-logo.png\n\n[npm-badge]: https://badge.fury.io/js/git-changelog.svg\n[npm-url]: https://www.npmjs.org/package/git-changelog\n\n[travis-badge]: https://travis-ci.org/rafinskipg/git-changelog.svg\n[travis-url]: https://travis-ci.org/rafinskipg/git-changelog\n\n[codeclimate-badge]: https://codeclimate.com/github/rafinskipg/git-changelog/badges/gpa.svg\n[codeclimate-url]: https://codeclimate.com/github/rafinskipg/git-changelog\n\n[coverage-badge]: https://codeclimate.com/github/rafinskipg/git-changelog/badges/coverage.svg\n\n[JohnnyEstilles]: https://github.com/JohnnyEstilles\n[npm-versioning]: https://docs.npmjs.com/cli/version",
  "readmeFilename": "README.md",
  "_id": "git-changelog@0.1.8",
  "_from": "git-changelog@>=0.1.8 <0.2.0"
}
